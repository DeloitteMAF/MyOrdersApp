package xx.orders.am.common.serviceinterface;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;

import xx.orders.view.common.XxMyLocationsVOSDO;
import xx.orders.view.common.XxMyOrdersVOSDO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 05 14:32:17 IST 2015
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace = "/xx/orders/am/common/", name = "XxMyOrdersService",
                    wsdlLocation = "xx/orders/am/common/serviceinterface/XxMyOrdersService.wsdl")
@SDODatabinding(schemaLocation = "xx/orders/am/common/serviceinterface/XxMyOrdersService.xsd")
public interface XxMyOrdersService {

    public static final String NAME = "{/xx/orders/am/common/}XxMyOrdersService";

    /**
     * Exported method getCustomerLocations from XxMyOrdersAM.
     */
    @WebMethod(action = "/xx/orders/am/common/getCustomerLocations", operationName = "getCustomerLocations")
    @RequestWrapper(targetNamespace = "/xx/orders/am/common/types/", localName = "getCustomerLocations")
    @ResponseWrapper(targetNamespace = "/xx/orders/am/common/types/", localName = "getCustomerLocationsResponse")
    @WebResult(name = "result")
    List<xx.orders.view.common.XxMyLocationsVOSDO> getCustomerLocations(@WebParam(mode = WebParam.Mode.IN,
                                                                                  name = "custAccountId")
                                                                        Long custAccountId) throws ServiceException;

    /**
     * Exported method getRequestedOrders from XxMyOrdersAM.
     */
    @WebMethod(action = "/xx/orders/am/common/getRequestedOrders", operationName = "getRequestedOrders")
    @RequestWrapper(targetNamespace = "/xx/orders/am/common/types/", localName = "getRequestedOrders")
    @ResponseWrapper(targetNamespace = "/xx/orders/am/common/types/", localName = "getRequestedOrdersResponse")
    @WebResult(name = "result")
    List<XxMyOrdersVOSDO> getRequestedOrders(@WebParam(mode = WebParam.Mode.IN, name = "noOfDays") Integer noOfDays,
                                             @WebParam(mode = WebParam.Mode.IN, name = "noOfRows") Integer noOfRows,
                                             @WebParam(mode = WebParam.Mode.IN, name = "userName") String userName,
                                             @WebParam(mode = WebParam.Mode.IN, name = "orderBy") String orderBy,
                                             @WebParam(mode = WebParam.Mode.IN, name = "fetchClosedOrders")
                                             String fetchClosedOrders,
                                             @WebParam(mode = WebParam.Mode.IN, name = "filterDateType")
                                             String filterDateType) throws ServiceException;
}

