package xx.orders.am.server.serviceinterface;

import java.lang.reflect.Method;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;

import oracle.wsm.metadata.annotation.PolicyReference;
import oracle.wsm.metadata.annotation.PolicySet;

import xx.orders.am.XxMyOrdersAMImpl;
import xx.orders.am.common.serviceinterface.XxMyOrdersService;
import xx.orders.view.common.XxMyLocationsVOSDO;
import xx.orders.view.common.XxMyOrdersVOSDO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 05 14:32:17 IST 2015
// ---------------------------------------------------------------------
@Interceptors({ ServiceContextInterceptor.class })
@Stateless(name = "xx.orders.am.common.XxMyOrdersServiceBean", mappedName = "XxMyOrdersServiceBean")
@Remote(XxMyOrdersService.class)
@PortableWebService(targetNamespace = "/xx/orders/am/common/", serviceName = "XxMyOrdersService",
                    portName = "XxMyOrdersServiceSoapHttpPort",
                    endpointInterface = "xx.orders.am.common.serviceinterface.XxMyOrdersService")
public class XxMyOrdersServiceImpl extends ServiceImpl implements XxMyOrdersService {
    private static boolean _isInited = false;
    private static final Map _map = new HashMap();

    /**
     * This is the default constructor (do not remove).
     */
    public XxMyOrdersServiceImpl() {
        init();
        setApplicationModuleDefName("xx.orders.am.XxMyOrdersAM");
        setConfigurationName("XxMyOrdersService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (XxMyOrdersServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("xx/orders/am/common/serviceinterface/", "XxMyOrdersService.xsd");
                _map.put("getRequestedOrders", XxMyOrdersAMImpl.class.getMethod("getRequestedOrders", new Class[] {
                                                                                Long.class, Integer.class,
                                                                                Integer.class, String.class,
                                                                                String.class, String.class
                }));
                _map.put("getCustomerLocations", XxMyOrdersAMImpl.class.getMethod("getCustomerLocations", new Class[] {
                                                                                  Long.class }));
                _isInited = true;
            } catch (Throwable t) {
                ADFLogger.createADFLogger(Diagnostic.SERVINT_RT_LOGGER).severe(t);
            }
        }
    }


    /**
     * getRequestedOrders: generated method. Do not modify.
     */
    public List<xx.orders.view.common.XxMyOrdersVOSDO> getRequestedOrders(Long custAccountId, Integer noOfDays,
                                                                          Integer noOfRows, String location,
                                                                          String orderBy,
                                                                          String fetchClosedOrders) throws ServiceException {
        return (List<xx.orders.view.common.XxMyOrdersVOSDO>) invokeCustom((Method) _map.get("getRequestedOrders"), new Object[] {
                                                                          custAccountId, noOfDays, noOfRows, location,
                                                                          orderBy, fetchClosedOrders
    }, new String[] { null, null, null, null, null, null }, xx.orders.view.common.XxMyOrdersVOSDO.class, false);
    }

    /**
     * getCustomerLocations: generated method. Do not modify.
     */
    public List<xx.orders.view.common.XxMyLocationsVOSDO> getCustomerLocations(Long custAccountId) throws ServiceException {
        return (List<xx.orders.view.common.XxMyLocationsVOSDO>) invokeCustom((Method) _map.get("getCustomerLocations"), new Object[] {
                                                                             custAccountId }, new String[] { null },
                                                                             xx.orders.view.common.XxMyLocationsVOSDO.class,
                                                                             false);
    }
}

