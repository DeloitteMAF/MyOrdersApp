package xx.orders.am;

import java.util.ArrayList;
import java.util.List;

import oracle.jbo.server.ApplicationModuleImpl;

import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import xx.orders.view.XxMyLocationsVORowImpl;
import xx.orders.view.XxMyOrdersVORowImpl;
import xx.orders.view.common.XxMyOrdersVOSDOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 10 08:28:06 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxMyOrdersAMImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public XxMyOrdersAMImpl() {
    }

    /**
     * Container's getter for XxMyOrdersVO.
     * @return XxMyOrdersVO
     */
    public ViewObjectImpl getXxMyOrdersVO() {
        return (ViewObjectImpl) findViewObject("XxMyOrdersVO");
    }
    
    public List<XxMyOrdersVORowImpl> getRequestedOrders(Integer noOfDays, Integer noOfRows, String userName,String orderBy,String fetchClosedOrders,String filterDateType) {
        System.out.println("+++++++++++++++++++++++++++"+filterDateType);
        ViewObjectImpl myOrdersVO= null;
            myOrdersVO=getXxMyOrdersVO();
        if("FulfillmentDate".equals(filterDateType)){
            myOrdersVO=getXxMyOrdersDateSortedVO1();
            System.out.println("using datesortedvo");
            //myOrdersVO.setOrderByClause("ordered_date");
        }
        else {
            myOrdersVO=getXxMyOrdersVO();
            //myOrdersVO.setOrderByClause("total_ordered_value");
        }
            switch(orderBy) {
            case "datedesc":
                myOrdersVO.setOrderByClause("ordered_date desc");
                break;
            case "date":
                myOrdersVO.setOrderByClause("ordered_date");
                break;
            case "amountdesc":
                myOrdersVO.setOrderByClause("total_ordered_value desc");
                break;
            case "amount":
                myOrdersVO.setOrderByClause("total_ordered_value");
                break;
            case "fuldatedesc":
                myOrdersVO.setOrderByClause("fulfillment_date desc");
                break;
            case "fuldate":
                myOrdersVO.setOrderByClause("fulfillment_date");
            }
        myOrdersVO.applyViewCriteria(null);
        myOrdersVO.setNamedWhereClauseParam("bindUserName", userName);
        myOrdersVO.setNamedWhereClauseParam("bindNoOfDays", noOfDays);
        //myOrdersVO.setNamedWhereClauseParam("bindNoOfRows", NoOfRows);
        //myOrdersVO.setNamedWhereClauseParam("bindLocation", location);
        System.out.println("now setting closedorderstatus"+fetchClosedOrders);
        if("No".equals(fetchClosedOrders)) {
            myOrdersVO.setApplyViewCriteriaName("statusCriteria");
        }
        System.out.println("now setting orderby"+orderBy);
        System.out.println("now setting noOfRows"+noOfRows);
        myOrdersVO.setMaxFetchSize(noOfRows);
        myOrdersVO.executeQuery();
        ArrayList<XxMyOrdersVORowImpl> myOrderList=new ArrayList<XxMyOrdersVORowImpl>();
        while(myOrdersVO.hasNext()) {
            myOrderList.add((XxMyOrdersVORowImpl)myOrdersVO.next());
        }
        return myOrderList;
    }
    
    public List<XxMyLocationsVORowImpl> getCustomerLocations(Long custAccountId) {
        ViewObjectImpl myLocationsVO= (ViewObjectImpl)getXxMyLocationsVO();
        myLocationsVO.setNamedWhereClauseParam("bindCustAccountId", custAccountId);
        myLocationsVO.executeQuery();
        ArrayList<XxMyLocationsVORowImpl> myLocationsList=new ArrayList<XxMyLocationsVORowImpl>();
        while(myLocationsVO.hasNext()) {
            myLocationsList.add((XxMyLocationsVORowImpl)myLocationsVO.next());
        }
        return myLocationsList;
    }


    /**
     * Container's getter for XxMyLocationsVO.
     * @return XxMyLocationsVO
     */
    public ViewObjectImpl getXxMyLocationsVO() {
        return (ViewObjectImpl) findViewObject("XxMyLocationsVO");
    }

    /**
     * Container's getter for XxMyOrdersVO1.
     * @return XxMyOrdersVO1
     */
    public ViewObjectImpl getXxMyOrdersVO1() {
        return (ViewObjectImpl) findViewObject("XxMyOrdersVO1");
    }

    /**
     * Container's getter for XxMyOrderDetailsVO1.
     * @return XxMyOrderDetailsVO1
     */
    public ViewObjectImpl getXxMyOrderDetailsVO1() {
        return (ViewObjectImpl) findViewObject("XxMyOrderDetailsVO1");
    }

    /**
     * Container's getter for XxMyOrdersVOToXxMyOrderDetailsVO.
     * @return XxMyOrdersVOToXxMyOrderDetailsVO
     */
    public ViewLinkImpl getXxMyOrdersVOToXxMyOrderDetailsVO() {
        return (ViewLinkImpl) findViewLink("XxMyOrdersVOToXxMyOrderDetailsVO");
    }

    /**
     * Container's getter for XxMyOrdersDateSortedVO1.
     * @return XxMyOrdersDateSortedVO1
     */
    public ViewObjectImpl getXxMyOrdersDateSortedVO1() {
        return (ViewObjectImpl) findViewObject("XxMyOrdersDateSortedVO1");
    }

    /**
     * Container's getter for XxMyOrderDetailsVO2.
     * @return XxMyOrderDetailsVO2
     */
    public ViewObjectImpl getXxMyOrderDetailsVO2() {
        return (ViewObjectImpl) findViewObject("XxMyOrderDetailsVO2");
    }

    /**
     * Container's getter for XxMyordersDateSortedVOToXxMyOrderDetailsVO1.
     * @return XxMyordersDateSortedVOToXxMyOrderDetailsVO1
     */
    public ViewLinkImpl getXxMyordersDateSortedVOToXxMyOrderDetailsVO1() {
        return (ViewLinkImpl) findViewLink("XxMyordersDateSortedVOToXxMyOrderDetailsVO1");
    }
}

