package xx.orders.view;

import java.math.BigDecimal;

import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 10 08:34:39 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxMyOrdersVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        OrderNumber,
        PartyName,
        AccountNumber,
        FlowStatusCode,
        OrderedDate,
        CustPoNumber,
        TotalOrderedValue,
        FulfillmentDate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return XxMyOrdersVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return XxMyOrdersVORowImpl.AttributesEnum.firstIndex() +
                   XxMyOrdersVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxMyOrdersVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORDERNUMBER = AttributesEnum.OrderNumber.index();
    public static final int PARTYNAME = AttributesEnum.PartyName.index();
    public static final int ACCOUNTNUMBER = AttributesEnum.AccountNumber.index();
    public static final int FLOWSTATUSCODE = AttributesEnum.FlowStatusCode.index();
    public static final int ORDEREDDATE = AttributesEnum.OrderedDate.index();
    public static final int CUSTPONUMBER = AttributesEnum.CustPoNumber.index();
    public static final int TOTALORDEREDVALUE = AttributesEnum.TotalOrderedValue.index();
    public static final int FULFILLMENTDATE = AttributesEnum.FulfillmentDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxMyOrdersVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrderNumber.
     * @return the OrderNumber
     */
    public BigDecimal getOrderNumber() {
        return (BigDecimal) getAttributeInternal(ORDERNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute PartyName.
     * @return the PartyName
     */
    public String getPartyName() {
        return (String) getAttributeInternal(PARTYNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute AccountNumber.
     * @return the AccountNumber
     */
    public String getAccountNumber() {
        return (String) getAttributeInternal(ACCOUNTNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute FlowStatusCode.
     * @return the FlowStatusCode
     */
    public String getFlowStatusCode() {
        return (String) getAttributeInternal(FLOWSTATUSCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderedDate.
     * @return the OrderedDate
     */
    public String getOrderedDate() {
        return (String) getAttributeInternal(ORDEREDDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute CustPoNumber.
     * @return the CustPoNumber
     */
    public String getCustPoNumber() {
        return (String) getAttributeInternal(CUSTPONUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute FulfillmentDate.
     * @return the FulfillmentDate
     */
    public String getFulfillmentDate() {
        return (String) getAttributeInternal(FULFILLMENTDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalOrderedValue.
     * @return the TotalOrderedValue
     */
    public BigDecimal getTotalOrderedValue() {
        return (BigDecimal) getAttributeInternal(TOTALORDEREDVALUE);
    }
}

